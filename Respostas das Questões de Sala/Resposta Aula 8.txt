Aluna: Lorena Albernaz 14/0025715
Aula 8

Questão 1
Escreva um código em C que pisca os LEDs ininterruptamente.

#include <msp430g2553.h>
#define LED1 BIT0
#define LED2 BIT6
#define LEDS (LED1+LED2)
/*função atraso*/
void delay(volatile unsigned int i){
while(i<5000)
{
i++;
}
}

int main(void)
{
WDTCTL = WDTPW | WDTHOLD;
P1DIR |= LEDS; // setando saidas e entradas
P1OUT |= LEDS;
while(1){
PIOUT^= LEDS;
delay(0);
}
return 0;

Questão 2
Escreva um código em C que pisca os LEDs ininterruptamente. No ciclo que pisca os LEDs, o tempo que os LEDs ficam ligados deve ser duas vezes maior do que o tempo que eles ficam desligados.

#include <msp430g2553.h>
#define LED1 BIT0
#define LED2 BIT6
#define LEDS (LED1+LED2)
void delay(volatile unsigned int i){
while(i<5000)
{
i++;
}
}

int main(void)
{
WDTCTL = WDTPW | WDTHOLD;
P1DIR |= LEDS; // setando saidas e entradas
P1OUT |= LEDS;
while(1){
PIOUT^= LEDS;
delay(0);
PIOUT^= LEDS;
delay(2500);
}
return 0;

Questão 3
Escreva um código em C que acende os LEDs quando o botão é pressionado.

#include <msp430g2553.h>
#define BTN BIT2
#define LED1 BIT0
#define LED2 BIT6
void main(void){
WDTCTL = WDTPW | WDTHOLD;
P1OUT = 0;
P1DIR = LED1 + LED2;
for(;;)
{
if(P1IN & BTN == 0)
P1OUT |= LED1 + LED2;
else
P1OUT &= ~(LED1 + LED2);
}
}

Questão 4
Escreva um código em C que pisca os LEDs ininterruptamente somente se o botão for pressionado.

#include <msp430g2553.h>
#define BTN BIT2
#define LED1 BIT0
#define LED2 BIT6
/*função atraso*/
void delay(volatile unsigned int i){
while(i<5000)
{
i++;
}
}
void main(void){
WDTCTL = WDTPW | WDTHOLD;
P1OUT = 0;
P1DIR = LED1 + LED2;
for(;;)
{
if(P1IN & BTN == 0)
while(1){
PIOUT^= LEDS;
delay(0);
}
else
P1OUT &= ~(LED1 + LED2);
}
}
5-Escreva um código em C que acende os LEDs quando o botão é pressionado. Deixe o MSP430 em modo de baixo consumo, e habilite a interrupção do botão.

#include <msp430g2553.h>
#define BTN BIT2
#define LED1 BIT0
#define LED2 BIT6
int main(void)
{
  WDTCTL = WDTPW | WDTHOLD;
  P1OUT &= ~LEDS;
  P1DIR |= LEDS;
  P1DIR &= ~BTN;
  P1REN |= BTN;
  P1OUT |= BTN;
  P1IES |= BTN;
  P1IE |= BTN;
  _BIS_SR(GIE + LPM4_bits);
  return 0;
}

interrupt(PORT1_VECTOR) Interrupcao_P1(void)
{
  P1OUT ^= LEDS;
  while((P1IN&BTN)==0);
  P1OUT ^= LEDS;
  P1IFG &= ~BTN;
}